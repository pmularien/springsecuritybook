<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security	http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/util	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	">
	<!-- Ch 9 Explicit LDAP Configuration -->
	<!-- 
	<bean class="org.springframework.security.ldap.DefaultSpringSecurityContextSource" id="ldapServer">
	<!- - Standard 
		<constructor-arg value="ldap://localhost:10389/dc=jbcppets,dc=com"/>
		<property name="userDn" value="uid=admin,ou=system"/>
		<property name="password" value="secret"/>
		- ->
	<!- - MS AD 
		<constructor-arg value="ldap://corp.jbcppets.com/dc=corp,dc=jbcppets,dc=com"/>
		<property name="userDn" value="CN=Administrator,CN=Users,DC=corp,DC=jbcppets,DC=com"/>
		<property name="password" value="admin123!"/>
		- ->
	</bean>
	 -->
	 <!-- 
	<bean class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider" id="ldapAuthProvider">
		<constructor-arg ref="ldapBindAuthenticator"/>
		<constructor-arg ref="ldapAuthoritiesPopulator"/>
		<property name="userDetailsContextMapper" ref="ldapUserDetailsContextMapper"/>
	</bean>
	
	<bean class="org.springframework.security.ldap.authentication.BindAuthenticator" id="ldapBindAuthenticator">
		<constructor-arg ref="ldapServer"/>
		<property name="userSearch" ref="ldapSearchBean"/>
	</bean>
	
	<bean class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch" id="ldapSearchBean">
		<!- - Standard Embedded or Apache DS LDAP - ->
		<constructor-arg value=""/> <!- - user-search-base - ->
		<constructor-arg value="(uid={0})"/> 
		<!- - MS AD
		<constructor-arg value="CN=Users"/> <!- - user-search-base - ->
		<!- - user-search-filter - ->
		<constructor-arg value="(sAMAccountName={0})"/>
		 - ->
		<constructor-arg ref="ldapServer"/>
	</bean>
	 -->
	<!-- 
	<bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator" id="ldapAuthoritiesPopulator">
		<constructor-arg ref="ldapServer"/>
		<constructor-arg value="ou=Groups"/>
		<property name="groupSearchFilter" value="(uniqueMember={0})"/>
	</bean>
	 -->
	 <!-- sample UserDetailsServiceLdapAuthoritiesPopulator configuration
	 <bean class="org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator" id="ldapAuthoritiesPopulator">
	 	<constructor-arg ref="jdbcUserServiceCustom"/>
	 </bean>
	  -->	 
	 <!-- 
	<bean class="com.packtpub.springsecurity.security.SimpleRoleGrantingLdapAuthoritiesPopulator" id="ldapAuthoritiesPopulator"/>
	
	<bean class="org.springframework.security.ldap.userdetails.InetOrgPersonContextMapper" id="ldapUserDetailsContextMapper"/>
 	-->
 	<!--  END Ch 9 LDAP CONFIGURATION -->
	<bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" id="expressionHandler"/>
	<bean class="com.packtpub.springsecurity.security.CustomWebSecurityExpressionHandler" id="customExpressionHandler"/>
	<bean class="org.springframework.security.web.access.expression.WebExpressionVoter" id="expressionVoter">
		<property name="expressionHandler" ref="customExpressionHandler"/>
	</bean>
	<bean class="org.springframework.security.access.vote.RoleVoter" id="roleVoter"/>
	<bean class="org.springframework.security.access.vote.AuthenticatedVoter" id="authenticatedVoter"/>
	
	<!--  Ch 4 PasswordEncoder exercise -->
	<bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder"/>
	<!--  Ch 4 Salt exercise -->	
	<bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
		<!-- Ch 4 Salted User -->
		<property name="userPropertyToUse" value="salt"/>
	</bean>
	<bean class="com.packtpub.springsecurity.security.DatabasePasswordSecurerBean" init-method="secureDatabase" depends-on="dataSource">
		<property name="dataSource" ref="dataSource"/>	
	</bean>

 	<bean id="jdbcUserServiceCustom" class="com.packtpub.springsecurity.security.CustomJdbcDaoImpl">
		<property name="dataSource" ref="dataSource"/>
		<property name="enableGroups" value="true"/>
		<property name="enableAuthorities" value="false"/>
		<!-- Ch 4 Salted User Exercise -->
		<property name="usersByUsernameQuery">
			<value>select username,password,enabled,salt from users where username = ?</value>
		</property>
	</bean>
	 	
	<!-- Ch 8 OpenID Registration -->
	<bean id="openIdAuthFailureHandler" class="com.packtpub.springsecurity.security.OpenIDAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.do"/>
	</bean>
	<context:annotation-config />
	<context:component-scan base-package="com.packtpub.springsecurity.dao"/>
	<context:component-scan base-package="com.packtpub.springsecurity.service"/>
	<context:component-scan base-package="com.packtpub.springsecurity.security"/>

</beans>
